"""add user_databases and update users

Revision ID: f6297729fa99
Revises: 9467fdbb11d6
Create Date: 2025-02-24 13:41:42.803170

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'f6297729fa99'
down_revision: Union[str, None] = '9467fdbb11d6'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


# def upgrade() -> None:
#     # ### commands auto generated by Alembic - please adjust! ###
#     op.create_table('user_databases',
#     sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
#     sa.Column('db_name', sa.String(), nullable=False),
#     sa.Column('db_uri', sa.String(), nullable=False),
#     sa.Column('db_schema', sa.String(), nullable=False),
#     sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
#     sa.Column('user_id', sa.Integer(), nullable=False),
#     sa.ForeignKeyConstraint(['user_id'], ['users.id'], onupdate='CASCADE', ondelete='CASCADE'),
#     sa.PrimaryKeyConstraint('id'),
#     sa.UniqueConstraint('db_name')
#     )
#     op.create_index(op.f('ix_user_databases_user_id'), 'user_databases', ['user_id'], unique=False)
#     op.add_column('users', sa.Column('id', sa.Integer(), autoincrement=True, nullable=False))
#     op.create_unique_constraint(None, 'users', ['username'])
#     # ### end Alembic commands ###


def upgrade() -> None:
    # Create new table user_databases
    op.create_table(
        'user_databases',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('db_name', sa.String(), nullable=False),
        sa.Column('db_uri', sa.String(), nullable=False),
        sa.Column('db_schema', sa.String(), nullable=False),
        sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
        sa.Column('user_id', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(['user_id'], ['users.id'], onupdate='CASCADE', ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('db_name')
    )
    op.create_index(op.f('ix_user_databases_user_id'), 'user_databases', ['user_id'], unique=False)

    # Use batch mode to modify 'users' table
    with op.batch_alter_table('users', recreate='always') as batch_op:
        batch_op.add_column(sa.Column('id', sa.Integer(), autoincrement=True, nullable=False))
        batch_op.create_unique_constraint('uq_users_username', ['username'])  # Provide a name for the constraint


# def downgrade() -> None:
#     # ### commands auto generated by Alembic - please adjust! ###
#     op.drop_constraint(None, 'users', type_='unique')
#     op.drop_column('users', 'id')
#     op.drop_index(op.f('ix_user_databases_user_id'), table_name='user_databases')
#     op.drop_table('user_databases')
#     # ### end Alembic commands ###

def downgrade() -> None:
    # Drop the modifications
    with op.batch_alter_table('users', recreate='always') as batch_op:
        batch_op.drop_constraint('uq_users_username', type_='unique')
        batch_op.drop_column('id')

    op.drop_index(op.f('ix_user_databases_user_id'), table_name='user_databases')
    op.drop_table('user_databases')